Design Plan - P3
Due: 3/12/25 11:59 PM

FINISHED ITEMS:
1. Read the specifications - understand the problem
2. Understand map-based input files
3. Add I/O functionality (reading a maze and storing its values in an object, then printing it out to a seperate file)
4. Add exceptions (IllegalCommandLineInputsException, IllegalMapCharacterException, IncompleteMapException, IncorrectMapFormatException)

TO-DO LIST (in order of priority):
- Find places to throw exceptions (nearly finished)
- Start working on a PathFinder class that takes in Maze objects and returns a 3D char array with the solution path
- Modify the Maze class to support the output formats of the solution path
- Implement the Stack based approach to the PathFinder class
- Implement the Queue based approach to the PathFinder class
- Work on measuring and reporting runtime for the entire search algorithm (implemented in the PathFinder class itself)
- Add support for commandline arguments and finish writing the help message
- Write tests using JUnit to check if the program's solutions are correct and search for bugs
- Implement the optimal approach to the PathFinder class
- Optimize the runtime of all three search algorithms